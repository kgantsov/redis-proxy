name: Build & Release

on:
  push:
    tags:
      - "v*" # e.g. v1.0.0
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write

jobs:
  build:
    name: Build binary & Docker image
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Rust
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # Cache Cargo build
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      # Build the release binary
      - name: Build release
        run: cargo build --release

      # Upload binary as artifact for release
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: target/release/redis-proxy

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build & push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/redis-proxy:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/redis-proxy:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: binary
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/redis-proxy
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
